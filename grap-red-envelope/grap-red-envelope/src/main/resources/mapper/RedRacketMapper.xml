<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.van.distributed.packet.mapper.RedRacketMapper">
  <resultMap id="BaseResultMap" type="cn.van.distributed.packet.entity.RedRacketDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="red_packet_id" jdbcType="BIGINT" property="redPacketId" />
    <result column="total_amount" jdbcType="INTEGER" property="totalAmount" />
    <result column="total_packet" jdbcType="INTEGER" property="totalPacket" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, red_packet_id, total_amount, total_packet, type, create_time, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from red_racket
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from red_racket
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.van.distributed.packet.entity.RedRacketDO">
    insert into red_racket (id, red_packet_id, total_amount, 
      total_packet, type, create_time, 
      version)
    values (#{id,jdbcType=BIGINT}, #{redPacketId,jdbcType=BIGINT}, #{totalAmount,jdbcType=INTEGER}, 
      #{totalPacket,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.van.distributed.packet.entity.RedRacketDO">
    insert into red_racket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="redPacketId != null">
        red_packet_id,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="totalPacket != null">
        total_packet,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="redPacketId != null">
        #{redPacketId,jdbcType=BIGINT},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="totalPacket != null">
        #{totalPacket,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.van.distributed.packet.entity.RedRacketDO">
    update red_racket
    <set>
      <if test="redPacketId != null">
        red_packet_id = #{redPacketId,jdbcType=BIGINT},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="totalPacket != null">
        total_packet = #{totalPacket,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.van.distributed.packet.entity.RedRacketDO">
    update red_racket
    set red_packet_id = #{redPacketId,jdbcType=BIGINT},
      total_amount = #{totalAmount,jdbcType=INTEGER},
      total_packet = #{totalPacket,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>